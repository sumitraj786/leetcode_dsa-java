class Solution {
    public List<String> generateParenthesis(int n) {
        ArrayList<String> result= new ArrayList<>();
        int open=0, close=0;
        int max=n;
        String current="";
        recursion(open,close,max,current,result);

        return result;
    }

    public void recursion(int open, int close, int max,String current,ArrayList<String> result)
    {

        if(current.length()==2*max)
        {
            result.add(current);
            return;
        }

        if(open<max)
        {
            recursion(open+1,close,max,current+"(",result);
        }
        if(close<open)
        {
            recursion(open,close+1,max,current+")",result);
        }
    }
}