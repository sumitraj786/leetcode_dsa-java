import java.util.*;

class Solution {
    public String reorganizeString(String s) {
        Map<Character, Integer> freq = new HashMap<>();
        for (char c : s.toCharArray()) freq.put(c, freq.getOrDefault(c, 0) + 1);

        int n = s.length();
        int max = 0;
        for (int v : freq.values()) if (v > max) max = v;
        if (max > (n + 1) / 2) return ""; // checking for feasibility

        PriorityQueue<Map.Entry<Character, Integer>> pq =
            new PriorityQueue<>((a, b) -> b.getValue() - a.getValue());
        pq.addAll(freq.entrySet());

        StringBuilder res = new StringBuilder();
        Map.Entry<Character, Integer> prev = null;

        while (!pq.isEmpty()) {
            Map.Entry<Character, Integer> cur = pq.poll();
            res.append(cur.getKey());
            cur.setValue(cur.getValue() - 1);

            if (prev != null && prev.getValue() > 0) pq.offer(prev);
            prev = cur.getValue() > 0 ? cur : null;
        }

        return res.toString();
    }
}
