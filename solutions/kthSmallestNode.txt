/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int counter = 0 ;
    int result = Integer.MIN_VALUE;

    public int kthSmallest(TreeNode root, int k) {
        dfsInorder(root, k);
        return result;
    }

    private void dfsInorder(TreeNode node, int k) {
        if(node == null) {
            return;
        }

        dfsInorder(node.left,k);

        counter++;
        if(counter == k) {
            result = node.val;
            return;
        } 

        dfsInorder(node.right,k);
    }
}