/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int goodNodes(TreeNode root) {
        return dfsPreorder(root, root.val);
    }

    private int dfsPreorder(TreeNode node, int maxVal) {
        if(node == null) {
            return 0;
        }

        maxVal = Math.max(maxVal, node.val);
        return (node.val >= maxVal ? 1 : 0) + dfsPreorder(node.left, maxVal) + dfsPreorder(node.right, maxVal);
    }
}